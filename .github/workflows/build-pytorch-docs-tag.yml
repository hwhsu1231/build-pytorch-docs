name: build-pytorch-docs-tag

on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: 
      - 'master'
    paths:
      - '.github/workflows/build-pytorch-docs-tag.yml'
  pull_request:
    branches: 
      - 'master'
    paths:
      - '.github/workflows/build-pytorch-docs-tag.yml'

  # Allows for the workflow to be manually started through the GitHub UI
  workflow_dispatch:

jobs:
  build-pytorch-docs-tag:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        # os: [ ubuntu-latest, windows-latest ]
    # runs-on: ubuntu-latest
    steps:
      - name: Check Contexts and Secrets
        run: |
          echo "[Contexts]"
          echo "github.job = ${{ github.job }}"
          echo "github.ref = ${{ github.ref }}"
          echo "github.ref_name = ${{ github.ref_name }}"
          echo "github.event_name = ${{ github.event_name }}"
          echo "runner.os = ${{ runner.os }}"
          echo "[Secrets]"
          echo "secrets.GITHUB_TOKEN = ${{ secrets.GITHUB_TOKEN }}"

      - name: Checkout to '${{ github.ref }}'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Npm Install 'katex'
        run: |
          npm install -g katex

      - name: Check Python Version
        run: |
          python --version

      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          auto-activate-base: false

      # - name: Install Conda
      #   uses: s-weigand/setup-conda@v1
      #   with:
      #     update-conda: true
      #     activate-conda: false
      #     conda-channels: anaconda

      - name: Clone the PyTorch Repository
        run: |
          git clone \
            --depth=1 \
            --branch=v2.3.0 \
            https://github.com/pytorch/pytorch.git \
            pytorch

      # https://pypi.org/project/torchvision/
      - name: Install the PyTorch
        run: |
          cd pytorch
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install pip --upgrade
          python -m pip install torch==2.3.0 torchvision==0.18.0 -f https://download.pytorch.org/whl/torch_stable.html
          python -m pip install -r docs/requirements.txt

      - name: Build PyTorch Documentation
        # continue-on-error: true
        run: |
          cd pytorch
          source .venv/bin/activate
          # make -C docs html
          # LANG=en_US.UTF-8 O='-v' make -C docs html 2> errors.txt
          # cd docs
          # sphinx-build -M html source build -j auto -WT --keep-going -D gettext_compact=0
          LANG=en_US.UTF-8 make -C docs figures
          LANG=en_US.UTF-8 make -C docs onnx
          LANG=en_US.UTF-8 make -C docs opset
          LANG=en_US.UTF-8 make -C docs exportdb
          LANG=en_US.UTF-8 sphinx-build -M html docs/source docs/build -j auto -v -WT

      # - name: Deploy to 'gh-pages' branch
      #   uses: JamesIves/github-pages-deploy-action@v4
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: gh-pages
      #     folder: ./pytorch/docs/build/html
      #     target-folder: .
      #     clean: false
